big_int_input:
  xor eax,eax
  mov [ebp+36],eax
  xor eax,eax
  mov [ebp+40],eax
  xor eax,eax
  mov [ebp+48],eax
  mov eax,[ebp+1020]
  mov edx,eax
  mov eax,0
  cmp edx,eax
  je .P6
  mov ebx,[ebp+220]
  mov eax,[ebx+1]
  and eax,0x000000ff
  mov edx,eax
  mov eax,[ebp+96]
  cmp edx,eax
  jne .P7
  mov ebx,[ebp+220]
  mov eax,[ebx+0]
  and eax,0x000000ff
  mov edx,eax
  mov eax,0
  cmp edx,eax
  jne .P7
  mov eax,2
  mov [ebp+36],eax
.P1:
  mov ebx,[ebp+36]
  add ebx,[ebp+220]
  mov ebx,[ebx]
  and ebx,0x000000ff
  mov eax,ebx
  mov edx,eax
  mov eax,48
  cmp edx,eax
  jb .P7
  mov ebx,[ebp+36]
  add ebx,[ebp+220]
  mov ebx,[ebx]
  and ebx,0x000000ff
  mov eax,ebx
  mov edx,eax
  mov eax,57
  cmp edx,eax
  ja .P2
  mov ebx,[ebp+36]
  add ebx,[ebp+220]
  mov ebx,[ebx]
  and ebx,0x000000ff
  mov eax,ebx
  sub eax,48
  mov [ebp+96],eax
  mov ebx,[ebp+48]
  shl ebx,byte 2
  add ebx,[ebp+224]
  mov eax,[ebx]
